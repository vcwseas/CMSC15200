hw2_p1.c
======================

// Victor Cheung, vcheung
// CS 152, Winter 2014
// Homwork 2, Problem 1

#include <stdio.h>
#include <stdlib.h>

//prints a integer array in format [x1, x2, x3, ... ,  xn]
void ia_show(int a[], int len, int newline)
{
  int i;
  printf("[");
  for (i = 0; i < len; i++)
  {
    if (i == len - 1)
      printf("%d", a[i]);
    else
      printf("%d, ", a[i]);
  }
  printf("]");
  if (newline)
    printf("\n");
}

//returns the manimum element in the array
int ia_max(int a[], int len)
{
  if (len == 0)
  {
    fprintf(stderr, "ia_max: length of array is 0\n");
    exit(1);
  }
  int i, max = a[0];
  for (i = 0; i < len; i++)
  {
    if (a[i] > max)
      max = a[i];
  }
  return max;
}

//destructively reverses the given array
void ia_reverse(int a[], int len)
{
  int i, temp, target, mid = (len + 1) / 2;
  for (i = 0; i < mid; i++)
  {
    target = len - i - 1;
    temp = a[i];
    a[i] = a[target];
    a[target] = temp;
  }
}

//checks whether two arrays are exactly the same
int ia_same(int a[], int alen, int b[], int blen)
{
  if (alen != blen)
    return 0;
  else
  {
    int i;
    for (i = 0; i < alen; i++)
    {
      if (a[i] != b[i])
        return 0;
    }
  }
  return 1;
}



int main()
{
  int a[] = {1,2,3,4,5,6,7};
  int b[] = {3,2,1,4,5,6};
  int c[] = {};
  int d[] = {0,0,0,0,0,0};
  int e[] = {1,2,3,4,5,6,7};

  //TESTS for ia_max
  printf("%s\n", "Tests for ia_max");
  printf("%d\n", ia_max(a, 7));
  printf("%d\n", ia_max(b, 6));
  printf("%d\n", ia_max(d, 6));

  //TESTS FOR ia_reverse
  printf("%s\n", "Tests for ia_reverse");
  ia_show(a, 7, 1);
  ia_reverse(a, 7);
  ia_show(a, 7, 1);
  printf("\n");
  ia_show(b, 6, 1);
  ia_reverse(b, 6);
  ia_show(b, 6, 1);
  printf("\n");
  ia_show(d, 6, 1);
  ia_reverse(d, 6);
  ia_show(d, 6, 1);

  //TESTS FOR ia_same
  printf("%s\n", "Tests for ia_same" );
  ia_show(a, 7, 1);
  ia_show(b, 6, 1);
  printf("%d\n", ia_same(a, 7, b, 6));

  ia_show(e, 7, 1);
  ia_reverse(a, 7);
  ia_show(a, 7, 1);
  printf("%d\n", ia_same(a, 7, e, 7));

  //ERROR CHECKING
  printf("%s\n", "ERROR CHECKING");
  ia_reverse(c, 0);


  return 0;
}
hw2_p2.c
======================

// Victor Cheung, vcheung
// CS 152, Winter 2014
// Homework 2, Problem 2
#include <stdlib.h>
#include <stdio.h>


void printBlock(int sl, char c)
{
  int j;
  for (j = 0; j < sl; j++)
    {
       printf("%c", c);
    }
}

void printLine(int sl, int ns, char lc, char dc, int start)
{
  int i, k;
  for (k = 0; k < sl; k++)
  {
      for (i = 0; i < ns; i++)
      {
            char c = start? lc : dc;
            printBlock(sl, c);
            start = !start;
      }
      printf("\n");
      if (ns % 2 == 1)
        start = !start;
  }
}

void printBoard(int sl, int ns, char lc, char dc)
{
  int i;
  for (i = 0; i < ns; i++)
    printLine(sl, ns, lc, dc, i % 2 == 0? 1 : 0);
}

int main(int argc, char *argv[])
{
  printBoard(atoi(argv[1]), atoi(argv[2]), *argv[3], *argv[4]);
}


Makefile
======================

arrays: hw2_p1.c
	gcc -Wall -Wextra  -o arrays hw2_p1.c

check: hw2_p2.c
	gcc -Wall -Wextra  -o check hw2_p2.c

sinsquare: hw2_p3.c my_abs.c
	gcc -Wall -Wextra -lm -o sinsquare hw2_p3.c
hw2_p3.c
======================

// Victor Cheung, vcheung
// CS 152, Winter 2014
// Homework 2, Problem 3

#include <stdio.h>
#include <math.h>

void printPPM()
{
  int side = 480;
  double i, j, distance, sinv;
  int b;
  printf("P3\n480 480\n255\n");
  for (i = 0; i < side; i++)
  {
    for (j = 0; j < side; j++)
    {
      distance = sqrt(  pow( fabs(i - 240), 2)
        + pow( fabs(j - 240), 2 ));
      sinv = sin(distance);
      b = (int) (((sinv + 1.0) / 2.0) * 255.0);
      printf("0 0 %d\n", b);
    }
  }
}

int main()
{
  printPPM();
  return 0;
}

====== evaluation ======

/* === correctness === */

/* arrays */
/*   ia_show         5/ 5 */
/*   ia_max          5/ 5 */
/*   ia_reverse      5/ 5 */
/*   ia_same         5/ 5 */
/* check            20/20 */
/* sinsquare        20/20 */

/* === style === */
/* code layout      6/ 6 */
/* clarity          6/ 6 */

/* === misc === */
/* Makefile         4/ 4 */
/* svn              4/ 4 */

/* _total-score_   80/80 */

/* graded by Moe Alkhafaji */
